body {
  --integerMax: 255;
  --lengthFieldRowMin: calc(
    var(--lengthLabelMin) + var(--lengthInputRigid) * var(--fontSizeFactorDent)
  );
  --lengthFieldRowSmallMin: calc(
    var(--lengthLabelMin) + var(--lengthInputShortRigid) *
      var(--fontSizeFactorDent)
  );
  --lengthInputRigid: calc(var(--spacer) * 52);
  --lengthInputShortRigid: calc(var(--spacer) * 26);
  --lengthInputSwitchDefault: 14px;
  --lengthLabelMax: calc(var(--spacer) * 42);
  --lengthLabelMin: var(--lengthInputShortRigid);
}

form fieldset,
form section {
  margin-block-end: var(--spacer4);
}

form fieldset {
  border: 1px solid var(--colorAccentLow);
  padding: var(--spacer2);
}

form fieldset > .field,
form section > .field,
form .group > .field,
form > .field {
  margin-block-end: var(--spacer2);
}

form fieldset > .field:hover,
form section > .field:hover,
form .group > .field:hover,
form > .field:hover {
  background-color: var(--colorHoverBackground);
}

form .field,
form .group,
form .input,
form .label {
  display: flex;
}

form .field,
form .field.column > .input,
form .field.row > .input,
form .field.row.space-between > .label,
form .field.switch > .input,
form .field.switch > .label,
form .group {
  align-content: flex-start;
  justify-content: flex-start;
}

form .field {
  flex-wrap: nowrap;
}

form .field > *,
form .group > *,
form .input > *,
form .label > * {
  flex-shrink: 0;
}

form .field.column,
form .input.column {
  flex-direction: column;
}

form .field.column > label,
form .field.column > .label,
form .field.column > .label > *,
form .field.row.space-between > label,
form .field.row.space-between > .label,
form .field.row.space-between > .label > *,
form .field.switch > label,
form .field.switch > .label,
form .field.switch > .label > * {
  text-align: start;
}

form .field.column > label {
  padding-block-end: var(--spacer);
  padding-inline-start: var(--spacer);
}

form .field.column > label:not(:empty),
form .field.column > .label:not(:empty) {
  border-inline-end-color: var(--colorAccentMin);
  border-inline-end-style: solid;
  border-inline-end-width: 1px;
  border-inline-start-color: var(--colorAccentLow);
  border-inline-start-style: solid;
  border-inline-start-width: 2px;
}

form .field.column > .label {
  align-content: flex-end;
  justify-content: flex-start;
}

form .field.column > .label > :first-child {
  border-inline-start-width: 0;
}

form .field.column > .label > input {
  max-width: var(--lengthLabelMax);
}

form .field.column:hover > label:not(:empty),
form .field.column:hover > .label:not(:empty) {
  border-inline-start-color: var(--colorInputHoverBorder);
}

form .field.column:focus-within > label:not(:empty),
form .field.column:focus-within > .label:not(:empty) {
  border-inline-start-color: var(--colorInputFocusBorder);
}

form .field.column:active > label:not(:empty),
form .field.column:active > .label:not(:empty) {
  border-inline-start-color: var(--colorInputActiveBorder);
}

form .field.row,
form .field.switch,
form .group,
form .input,
form .label {
  flex-direction: row;
}

form .field.row {
  min-width: var(--lengthFieldRowMin);
}

form .field.row > label,
form .field.row > .input,
form .field.row > .label,
form .field.row > .label > input,
form .field.row > .label > select,
form .field.switch > .label,
form .field.switch > .label > input,
form .field.switch > .label > select,
form .group > .field,
form .input.fluid > button,
form .input.fluid > input,
form .input.fluid > meter,
form .input.fluid > output,
form .input.fluid > progress,
form .input.fluid > select,
form .input.fluid > textarea,
form .input.fluid > .field,
form .input.shorter > button,
form .input.shorter > input,
form .input.shorter > meter,
form .input.shorter > output,
form .input.shorter > progress,
form .input.shorter > select,
form .input.shorter > textarea,
form .input.shorter > .field {
  flex-grow: 1;
}

form .field.row > label,
form .field.switch > label {
  padding-block-start: var(--spacer);
}

form .field.row > label,
form .field.row > .label,
form .field.row > .label > *,
form .field.row.space-between > .input,
form .field.row.space-between > .input > :not(button) {
  text-align: end;
}

form .field.row > label,
form .field.row > .label {
  flex-basis: var(--lengthLabelMin);
  max-width: var(--lengthLabelMax);
}

form .field.row > label,
form .field.row > .label > :last-child {
  padding-inline-end: var(--spacer2);
}

form .field.row > label:not(:empty),
form .field.row > .label:not(:empty),
form .field.switch > label:not(:empty),
form .field.switch > .label:not(:empty) {
  border-block-end-color: var(--colorAccentMin);
  border-block-end-style: solid;
  border-block-end-width: 1px;
  border-block-start-color: var(--colorAccentLow);
  border-block-start-style: solid;
  border-block-start-width: 2px;
}

form .field.row:hover > label:not(:empty),
form .field.row:hover > .label:not(:empty),
form .field.switch:hover > label:not(:empty),
form .field.switch:hover > .label:not(:empty) {
  border-block-start-color: var(--colorInputHoverBorder);
}

form .field.row:focus-within > label:not(:empty),
form .field.row:focus-within > .label:not(:empty),
form .field.switch:focus-within > label:not(:empty),
form .field.switch:focus-within > .label:not(:empty) {
  border-block-start-color: var(--colorInputFocusBorder);
}

form .field.row:active > label:not(:empty),
form .field.row:active > .label:not(:empty),
form .field.switch:active > label:not(:empty),
form .field.switch:active > .label:not(:empty) {
  border-block-start-color: var(--colorInputActiveBorder);
}

form .field.row > .input,
form .input.fluid > button,
form .input.fluid > input,
form .input.fluid > meter,
form .input.fluid > output,
form .input.fluid > progress,
form .input.fluid > select,
form .input.fluid > textarea,
form .input.fluid > .field,
form .input.rigid > button,
form .input.rigid > input,
form .input.rigid > meter,
form .input.rigid > output,
form .input.rigid > progress,
form .input.rigid > select,
form .input.rigid > textarea,
form .input.rigid > .field {
  flex-basis: var(--lengthInputRigid);
}

form .field.row > .input > input[type="checkbox"],
form .field.row > .input > input[type="radio"],
form .field.switch > input,
form .field.switch > .input {
  margin-block-start: calc(
    var(--spacer) + var(--lineHeight) / 2 - var(--lengthInputSwitchDefault) / 2 +
      2px
  );
}

form .field.row > .label,
form .field.switch > .label {
  align-items: flex-start;
}

form .field.row > .label {
  align-content: flex-start;
  justify-content: flex-end;
}

form .field.row > .label > *,
form .field.switch > .label > * {
  border-block-start-width: 0;
}

form .field.row > .label > input,
form .field.row > .label > select,
form .field.row.space-between > label,
form .field.row.space-between > .input,
form .field.row.space-between > .label,
form .field.switch > .label > input,
form .field.switch > .label > select {
  flex-basis: 0;
}

form .field.row.no-label > .input {
  flex-basis: var(--lengthFieldRowMin);
}

form .field.row.short.no-label > .input {
  flex-basis: var(--lengthFieldRowSmallMin);
}

form .field.row.short-label > label,
form .field.row.short-label > .label,
form .field.row.small > label,
form .field.row.small > .label {
  max-width: var(--lengthLabelMin);
}

form .field.row.small {
  min-width: var(--lengthFieldRowSmallMin);
}

form .field.row.small > .input,
form .input.short > button,
form .input.short > input,
form .input.short > meter,
form .input.short > output,
form .input.short > progress,
form .input.short > select,
form .input.short > textarea,
form .input.short > .field,
form .input.shorter > button,
form .input.shorter > input,
form .input.shorter > meter,
form .input.shorter > output,
form .input.shorter > progress,
form .input.shorter > select,
form .input.shorter > textarea,
form .input.shorter > .field {
  flex-basis: var(--lengthInputShortRigid);
}

form .field.row.space-between > label,
form .field.row.space-between > .label {
  max-width: unset;
  min-width: var(--lengthLabelMin);
}

form .field.row.space-between > label {
  padding-inline-start: var(--spacer);
}

form .field.row.space-between > .input {
  align-content: center;
  align-self: center;
  justify-content: flex-end;
  min-width: var(--lengthInputRigid);
}

form .field.row.space-between > .input > input {
  margin-block-start: 0;
}

form .field.switch,
form .field.switch > label {
  padding-inline-end: var(--spacer);
  padding-inline-start: var(--spacer);
}

form .field.switch > label,
form .input.rigid > button,
form .input.rigid > input,
form .input.rigid > meter,
form .input.rigid > output,
form .input.rigid > progress,
form .input.rigid > select,
form .input.rigid > textarea,
form .input.rigid > .field,
form .input.short > button,
form .input.short > input,
form .input.short > meter,
form .input.short > output,
form .input.short > progress,
form .input.short > select,
form .input.short > textarea,
form .input.short > .field {
  flex-grow: 0;
}

form .field.switch > label {
  min-width: var(--spacer5);
}

form .field.switch > input {
  align-self: flex-start;
}

form .field.switch > .label {
  flex-basis: var(--spacer5);
}

form .group,
form .input,
form .label {
  flex-wrap: wrap;
}

form .group > .field {
  flex-basis: auto;
  margin-block-end: var(--spacer2);
  margin-inline-end: var(--spacer2);
}

form .input {
  font-size: var(--fontSizeDent);
}

form .input > span,
form .label > span {
  align-self: flex-end;
  padding-block-end: calc(var(--spacer) + 1px);
}

form .input.column > * {
  width: 100%;
}

form .input.rigid > button,
form .input.rigid > input,
form .input.rigid > meter,
form .input.rigid > output,
form .input.rigid > progress,
form .input.rigid > select,
form .input.rigid > textarea,
form .input.rigid > .field {
  max-width: var(--lengthInputRigid);
}

form .input.short > button,
form .input.short > input,
form .input.short > meter,
form .input.short > output,
form .input.short > progress,
form .input.short > select,
form .input.short > textarea,
form .input.short > .field {
  max-width: var(--lengthInputShortRigid);
}
